<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="eu.europa.ec.cc.processcentre.process.command.repository.ProcessMapper">

  <resultMap id="processVariable" type="eu.europa.ec.cc.processcentre.process.command.repository.model.FindProcessVariableQueryResponse">
    <id property="processInstanceId" column="variable_process_instance_id"/>
    <id property="name" column="name"/>
    <result property="valueString" column="value_string"/>
    <result property="valueInteger" column="value_integer"/>
    <result property="valueLong" column="value_long"/>
    <result property="valueDouble" column="value_double"/>
    <result property="valueBoolean" column="value_boolean"/>
    <result property="valueDate" column="value_date"/>
  </resultMap>

  <resultMap id="translation" type="eu.europa.ec.cc.processcentre.process.command.repository.model.FindProcessByIdQueryResponseTranslation">
    <id property="objectId" column="object_id"/>
    <id property="objectType" column="object_type"/>
    <id property="attribute" column="attribute_name"/>
    <id property="languageCode" column="language_code"/>
    <result property="text" column="translated_text"/>
    <result property="isDefault" column="is_default"/>
  </resultMap>

  <resultMap id="processStatusLog" type="eu.europa.ec.cc.processcentre.process.command.repository.model.FindProcessByIdQueryActionLog">
    <id property="id" column="status_id"/>
    <result property="process_instance_id" column="status_process_instance_id"/>
    <result property="timestamp" column="status_timestamp"/>
    <result property="status" column="status_process_status"/>
  </resultMap>

  <resultMap id="portfolioItem" type="eu.europa.ec.cc.processcentre.process.command.repository.model.FindProcessByIdQueryResponsePortfolioItem">
    <id property="processInstanceId" column="portfolio_process_instance_id"/>
    <id property="portfolioItemId" column="portfolio_item_id"/>
  </resultMap>

  <resultMap id="process" type="eu.europa.ec.cc.processcentre.process.command.repository.model.FindProcessByIdQueryResponse">
    <id property="processInstanceId" column="process_instance_id"/>
    <result property="providerId" column="provider_id"/>
    <result property="domainKey" column="domain_key"/>
    <result property="processTypeKey" column="process_type_key"/>
    <result property="status" column="process_status"/>
    <result property="businessStatus" column="business_status"/>
    <result property="processTypeId" column="process_type_id"/>
    <result property="processResponsibleOrganisation" column="process_responsible_organisation_id"/>
    <result property="processResponsibleUserId" column="process_responsible_user_id"/>
    <result property="businessDomainId" column="business_domain_id"/>
    <result property="resultCard" column="result_card"/>
    <result property="securityApplicationId" column="security_application_id"/>
    <result property="securitySecundaTask" column="security_secunda_task"/>
    <result property="securityScopeTypeId" column="security_scope_type_id"/>
    <result property="securityScopeId" column="security_scope_id"/>
    <result property="securityOrganisationId" column="security_organisation_id"/>
    <collection property="variables" javaType="java.util.ArrayList" resultMap="processVariable"/>
    <collection property="translations" javaType="java.util.ArrayList" resultMap="translation"/>
    <collection property="runningStatusLogs" javaType="java.util.ArrayList" resultMap="processStatusLog"/>
    <collection property="portfolioItemIds" javaType="java.util.ArrayList" resultMap="portfolioItem"/>
  </resultMap>

  <select id="findById" resultMap="process">
    SELECT
      p.PROCESS_INSTANCE_ID as process_instance_id,
      p.PROVIDER_ID as provider_id,
      p.DOMAIN_KEY as domain_key,
      p.PROCESS_TYPE_KEY as process_type_key,
      p.BUSINESS_STATUS as business_status,
      p.PROCESS_TYPE_ID as process_type_id,
      p.STATUS as process_status,
      p.RESPONSIBLE_ORGANISATION_ID as process_responsible_organisation_id,
      p.RESPONSIBLE_USER_ID as process_responsible_user_id,
      p.BUSINESS_DOMAIN_ID as business_domain_id,
      p.RESULT_CARD as result_card,
      p.SECURITY_APPLICATION_ID as security_application_id,
      p.SECURITY_SECUNDA_TASK as security_secunda_task,
      p.SECURITY_SCOPE_TYPE_ID as security_scope_type_id,
      p.SECURITY_SCOPE_ID as security_scope_id,
      p.SECURITY_ORGANISATION_ID as security_organisation_id,
      t.OBJECT_ID as object_id,
      t.OBJECT_TYPE as object_type,
      t.ATTRIBUTE_NAME as attribute_name,
      t.LANGUAGE_CODE as language_code,
      t.TRANSLATED_TEXT as translated_text,
      t.IS_DEFAULT as is_default,
      v.PROCESS_INSTANCE_ID as variable_process_instance_id,
      v.NAME as name,
      v.VALUE_STRING as value_string,
      v.VALUE_INTEGER as value_integer,
      v.VALUE_LONG as value_long,
      v.VALUE_DOUBLE as value_double,
      v.VALUE_BOOLEAN as value_boolean,
      v.VALUE_DATE as value_date,
      r.PROCESS_INSTANCE_ID as action_process_instance_id,
      r.ACTION as action_process_status,
      r.TIMESTAMP as action_timestamp,
      r.ACTION_ID as action_id,
      pf.PROCESS_INSTANCE_ID as portfolio_process_instance_id,
      pf.PORTFOLIO_ITEM_ID as portfolio_item_id
    FROM T_PROCESS p
    LEFT JOIN V_RESOLVED_TRANSLATION t ON t.OBJECT_ID = p.PROCESS_INSTANCE_ID AND
      t.OBJECT_TYPE = 'PROCESS'
    LEFT JOIN T_PROCESS_VARIABLE v ON v.PROCESS_INSTANCE_ID = p.PROCESS_INSTANCE_ID
    LEFT JOIN T_PROCESS_ACTION_LOG r ON r.PROCESS_INSTANCE_ID = p.PROCESS_INSTANCE_ID
    LEFT JOIN T_PROCESS_PORTFOLIO_ITEM pf ON pf.PROCESS_INSTANCE_ID = p.PROCESS_INSTANCE_ID
    WHERE p.PROCESS_INSTANCE_ID = #{value}
    ORDER BY r.TIMESTAMP desc
  </select>

  <select id="findProcessConfigById">
    SELECT PROCESS_INSTANCE_ID,
      TYPE,
      RESULT_CARD FROM T_PROCESS_CONFIG
    WHERE PROCESS_INSTANCE_ID = #{value}
  </select>

  <insert id="insertOrUpdateProcessConfig">
    INSERT INTO T_PROCESS_CONFIG (PROCESS_INSTANCE_ID, TYPE, RESULT_CARD)
    VALUES (#{processInstanceId}, #{processTypeConfig}, #{processResultCardConfig})
  </insert>

  <insert id="insertOrUpdateProcess">
    INSERT INTO T_PROCESS (
      PROCESS_INSTANCE_ID,
      PROCESS_TYPE_ID,
      DOMAIN_KEY,
      PROVIDER_ID,
      PROCESS_TYPE_KEY,
      BUSINESS_STATUS,
      RESPONSIBLE_ORGANISATION_ID,
      RESPONSIBLE_USER_ID,
      PARENT_PROCESS_INSTANCE_ID,
      BUSINESS_DOMAIN_ID
    )  VALUES (
    #{processInstanceId},
    #{processTypeId},
    #{domainKey},
    #{providerId},
    #{processTypeKey},
    #{businessStatus},
    #{responsibleOrganisationId},
    #{responsibleUserId},
    #{parentProcessInstanceId},
    #{businessDomainId}
    )
    ON CONFLICT (PROCESS_INSTANCE_ID) DO UPDATE SET
    DOMAIN_KEY = EXCLUDED.DOMAIN_KEY,
    PROVIDER_ID = EXCLUDED.PROVIDER_ID,
    PROCESS_TYPE_KEY = EXCLUDED.PROCESS_TYPE_KEY,
    BUSINESS_STATUS = EXCLUDED.BUSINESS_STATUS,
    RESPONSIBLE_ORGANISATION_ID = EXCLUDED.RESPONSIBLE_ORGANISATION_ID,
    RESPONSIBLE_USER_ID = EXCLUDED.RESPONSIBLE_USER_ID,
    PARENT_PROCESS_INSTANCE_ID = EXCLUDED.PARENT_PROCESS_INSTANCE_ID,
    BUSINESS_DOMAIN_ID = EXCLUDED.BUSINESS_DOMAIN_ID
  </insert>

  <update id="updateResolvedSecurityConfig">
    UPDATE T_PROCESS SET SECURITY_APPLICATION_ID = #{applicationId}, SECURITY_SECUNDA_TASK = #{secundaTask},
    SECURITY_SCOPE_TYPE_ID = #{scopeTypeId},
    SECURITY_SCOPE_ID = #{scopeId}, SECURITY_ORGANISATION_ID = #{organisationId}
    WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="updateResolvedConfig">
    UPDATE T_PROCESS
    <set>
      <if test="applicationId != null and applicationId != ''">
        SECURITY_APPLICATION_ID = #{applicationId},
      </if>
      <if test="secundaTask != null and secundaTask != ''">
        SECURITY_SECUNDA_TASK = #{secundaTask},
      </if>
      <if test="scopeTypeId != null and scopeTypeId != ''">
        SECURITY_SCOPE_TYPE_ID = #{scopeTypeId},
      </if>
      <if test="scopeId != null and scopeId != ''">
        SECURITY_SCOPE_ID = #{scopeId},
      </if>
      <if test="organisationId != null and organisationId != ''">
        SECURITY_ORGANISATION_ID = #{organisationId},
      </if>
      <if test="resultCardConfig != null and resultCardConfig != ''">
        RESULT_CARD = #{resultCardConfig},
      </if>
    </set>
    WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="deleteProcess">
    DELETE FROM T_PROCESS
      WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="updateResponsibleOrganisation">
    UPDATE T_PROCESS SET responsible_organisation_id = #{responsibleOrganisationId}
    WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="updateResponsibleUser">
    UPDATE T_PROCESS SET responsible_user_id = #{responsibleUserId}
    WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="changeBusinessStatus">
    UPDATE T_PROCESS SET BUSINESS_STATUS = #{businessStatus} WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <update id="updateProcessStatus">
    UPDATE T_PROCESS SET STATUS = #{status}::PROCESS_STATUS WHERE PROCESS_INSTANCE_ID = #{processInstanceId}
  </update>

  <insert id="insertOrUpdateProcessVariables" parameterType="collection">
    INSERT INTO T_PROCESS_VARIABLE (
    PROCESS_INSTANCE_ID,
    NAME,
    VALUE_TYPE,
    MIME_TYPE,
    VALUE_STRING,
    VALUE_INTEGER,
    VALUE_LONG,
    VALUE_DOUBLE,
    VALUE_BOOLEAN,
    VALUE_JSON,
    VALUE_BYTE,
    VALUE_DATE
    )  VALUES
    <foreach collection="variables" item="variable" separator=",">
      (#{variable.processInstanceId},
      #{variable.name},
      #{variable.valueType},
      #{variable.mimeType},
      #{variable.valueString},
      #{variable.valueInteger},
      #{variable.valueLong},
      #{variable.valueDouble},
      #{variable.valueBoolean},
      CAST(#{variable.valueJson} AS jsonb),
      #{variable.valueByte},
      #{variable.valueDate}
      )
    </foreach>
    ON CONFLICT (PROCESS_INSTANCE_ID,NAME) DO UPDATE SET
    VALUE_STRING = EXCLUDED.VALUE_STRING,
    VALUE_INTEGER = EXCLUDED.VALUE_INTEGER,
    VALUE_LONG = EXCLUDED.VALUE_LONG,
    VALUE_DOUBLE = EXCLUDED.VALUE_DOUBLE,
    VALUE_BOOLEAN = EXCLUDED.VALUE_BOOLEAN,
    VALUE_JSON = EXCLUDED.VALUE_JSON,
    VALUE_BYTE = EXCLUDED.VALUE_BYTE,
    VALUE_DATE = EXCLUDED.VALUE_DATE
  </insert>

  <delete id="deleteProcessVariables" parameterType="collection">
    DELETE FROM T_PROCESS_VARIABLE WHERE (PROCESS_INSTANCE_ID, NAME) IN
    <foreach collection="variables" item="variable" open="(" separator="," close=")">
      (#{variable.processInstanceId}, #{variable.name})
    </foreach>
  </delete>

  <select id="findProcessVariable" resultMap="processVariable">
    SELECT
    PROCESS_INSTANCE_ID
    NAME,
    VALUE_STRING,
    VALUE_INTEGER,
    VALUE_LONG,
    VALUE_DOUBLE,
    VALUE_BOOLEAN
    FROM T_PROCESS_VARIABLE WHERE PROCESS_INSTANCE_ID = #{processInstanceId} AND NAME = #{name}
  </select>

  <insert id="insertProcessActionLog">
    INSERT INTO T_PROCESS_ACTION_LOG (
      PROCESS_INSTANCE_ID,
      TIMESTAMP,
      ACTION,
      USER_ID,
      ON_BEHALF_OF_USER_ID
    ) VALUES (
      #{processInstanceId},
    <choose>
      <when test="timestamp != null">
        #{timestamp},
      </when>
      <otherwise>
        now(),
      </otherwise>
    </choose>
      #{action},
      #{userId},
      #{onBehalfOfUserId}
    )
  </insert>

  <insert id="insertProcessPortfolioItems">
    INSERT INTO T_PROCESS_PORTFOLIO_ITEM (PROCESS_INSTANCE_ID, PORTFOLIO_ITEM_ID)
    VALUES
    <foreach collection="portfolioItemIds" item="portfolioItemId" separator=",">
      (#{processInstanceId},#{portfolioItemId})
    </foreach>
  </insert>

  <insert id="insertProcessState">
    INSERT INTO T_PROCESS_BUSINESS_STATE (PROCESS_INSTANCE_ID, BUSINESS_STATE, TIMESTAMP)
    VALUES (#{processInstanceId}, #{state}, #{timestamp})
  </insert>

  <delete id="deleteProcessState">
    DELETE FROM T_PROCESS_BUSINESS_STATE WHERE BUSINESS_STATE = #{state}
      AND PROCESS_INSTANCE_ID = #{processInstanceId}
  </delete>

  <delete id="deleteProcessPortfolioItems">
    DELETE FROM T_PROCESS_PORTFOLIO_ITEM WHERE (PROCESS_INSTANCE_ID, PORTFOLIO_ITEM_ID)
    IN
    <foreach collection="portfolioItemIds" item="portfolioItemId" open="(" separator="," close=")">
      (#{processInstanceId}, #{portfolioItemId})
    </foreach>
  </delete>

  <insert id="setAsFavourite">
    INSERT INTO T_PROCESS_FAVOURITE (PROCESS_INSTANCE_ID, USER_ID)
      VALUES (#{processInstanceId}, #{userId}) ON CONFLICT DO NOTHING
  </insert>

  <insert id="removeFromFavourites">
    DELETE FROM T_PROCESS_FAVOURITE
    WHERE PROCESS_INSTANCE_ID = #{processInstanceId} AND USER_ID = #{userId}
  </insert>

</mapper>